-- 1. Sales per month
SELECT
  EXTRACT(MONTH FROM oi.Created_at) AS months,
  ROUND(SUM(CASE WHEN EXTRACT(YEAR FROM oi.Created_at) = 2019 THEN oi.sale_price * o.num_of_item ELSE 0 END), 2) AS revenue_2019,
  ROUND(SUM(CASE WHEN EXTRACT(YEAR FROM oi.Created_at) = 2020 THEN oi.sale_price * o.num_of_item ELSE 0 END), 2) AS revenue_2020,
  ROUND(SUM(CASE WHEN EXTRACT(YEAR FROM oi.Created_at) = 2021 THEN oi.sale_price * o.num_of_item ELSE 0 END), 2) AS revenue_2021,
  ROUND(SUM(CASE WHEN EXTRACT(YEAR FROM oi.Created_at) = 2022 THEN oi.sale_price * o.num_of_item ELSE 0 END), 2) AS revenue_2022,
  ROUND(SUM(CASE WHEN EXTRACT(YEAR FROM oi.Created_at) = 2023 THEN oi.sale_price * o.num_of_item ELSE 0 END), 2) AS revenue_2023
FROM
  bigquery-public-data.thelook_ecommerce.order_items oi
INNER JOIN
  `bigquery-public-data.thelook_ecommerce.orders` AS o ON oi.order_id = o.order_id
WHERE
  oi.status = 'Complete'
  AND EXTRACT(YEAR FROM oi.Created_at) BETWEEN 2019 AND 2023
GROUP BY
  months
ORDER BY
  months;
  
-- 2. The most busy hour
SELECT
  EXTRACT(HOUR FROM created_at) AS Order_Hour,
  COUNT(order_id) AS Order_Count
FROM bigquery-public-data.thelook_ecommerce.orders
GROUP BY order_hour
ORDER BY order_count DESC
LIMIT 5

-- 3. Trend of new customers that ordered on the same month
SELECT
  EXTRACT(MONTH FROM u.created_at) AS Registration_Month,
  COUNT(DISTINCT u.id) AS New_Customers,
  COUNT(DISTINCT CASE WHEN EXTRACT(MONTH FROM o.created_at) = EXTRACT(MONTH FROM delivered_at) THEN user_id END) AS Returning_Customers
FROM bigquery-public-data.thelook_ecommerce.orders AS o
INNER JOIN bigquery-public-data.thelook_ecommerce.users AS u
ON o.user_id = u.id
GROUP BY Registration_Month
ORDER BY Registration_Month


-- 4. Customers Profil by Country
SELECT 
  DISTINCT Country, 
  SUM(CASE WHEN u.gender = 'M' THEN 1 else null END) AS Male,
  SUM(CASE WHEN u.gender = 'F' THEN 1 else null END) as Female,
  COUNT(oi.user_id) AS Total_Customer
FROM bigquery-public-data.thelook_ecommerce.users AS u
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items AS oi
ON u.id = oi.user_id
WHERE oi.status = 'Complete'
GROUP BY Country
ORDER BY Total_Customer DESC


-- 5. The most traffic source that accessed by customers
SELECT
  u.traffic_source AS Traffic_Source,
  COUNT(DISTINCT oi.user_id) AS Total_Customers,
FROM bigquery-public-data.thelook_ecommerce.users AS u
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items AS oi
ON u.id = oi.user_id
GROUP BY Traffic_Source
ORDER BY Total_Customers DESC

-- 6. Customers who purchased the most
SELECT
  DISTINCT u.id AS User_id,
  u.first_name AS First_Name,
  u.last_name AS Last_Name,
  u.country AS Country,
  ROUND(SUM(o.num_of_item * oi.sale_price),1) AS Total_Purchase
FROM bigquery-public-data.thelook_ecommerce.users as u
INNER JOIN bigquery-public-data.thelook_ecommerce.orders as o
ON u.id = o.user_id
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items as oi
ON  o.order_id = oi.order_id
WHERE o.status = 'Complete'
GROUP BY  user_id, First_Name, Last_Name, Country
ORDER BY Total_Purchase DESC
LIMIT 10

-- 7. The most profitable country
SELECT
    DISTINCT u.country as Country,
    ROUND(SUM(oi.sale_price * o.num_of_item),1) AS Revenue
FROM bigquery-public-data.thelook_ecommerce.users as u
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items as oi
ON u.id = oi.user_id
INNER JOIN c as o
ON oi.order_id = o.order_id
GROUP BY Country
ORDER BY Revenue DESC
LIMIT 10

-- 8. Kategori Produk yang paling laris
SELECT
  category AS Product_Category,
  SUM(num_of_item) AS Quantity,
  ROUND(SUM(sale_price * num_of_item),1) AS Revenue
FROM bigquery-public-data.thelook_ecommerce.order_items AS oi
INNER JOIN bigquery-public-data.thelook_ecommerce.orders AS o
ON oi.order_id = o.order_id
INNER JOIN bigquery-public-data.thelook_ecommerce.products AS p
ON p.id = oi.product_id
WHERE oi.status = 'Complete'
GROUP BY Category
ORDER BY Revenue DESC
LIMIT 5

-- 9. Customer's age in the best selling category product
SELECT
  CASE
    WHEN u.age < 12 THEN 'Children'
    WHEN u.age BETWEEN 12 AND 20 THEN 'Youth'
    WHEN u.age BETWEEN 21 AND 30 THEN 'Young Adults'
    WHEN u.age BETWEEN 31 AND 65 THEN 'Adults'
    WHEN u.age > 65 THEN 'Older Adults'
    END AS age_group,
  COUNT(DISTINCT u.id) AS Total_Customer
FROM bigquery-public-data.thelook_ecommerce.users AS u
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items AS oi
ON u.id = oi.user_id
INNER JOIN bigquery-public-data.thelook_ecommerce.inventory_items AS ii
ON ii.product_id = oi.product_id
WHERE ii.product_category = 'Outerwear & Coats'
GROUP BY age_group
ORDER BY Total_Customer DESC

-- 10. Brand that the most getting returned by customers
SELECT 
  DISTINCT p.brand AS Brand,
  COUNT(o.num_of_item) AS Total_Returned
FROM bigquery-public-data.thelook_ecommerce.products as p
INNER JOIN bigquery-public-data.thelook_ecommerce.order_items as oi
ON p.id = oi.product_id
INNER JOIN bigquery-public-data.thelook_ecommerce.orders as o
ON oi.order_id = o.order_id
WHERE o.status = 'Returned'
GROUP BY Brand
ORDER BY Total_Returned DESC
LIMIT 5
